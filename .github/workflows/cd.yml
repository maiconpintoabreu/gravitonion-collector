# Build and Publish on Itch.io
# Only run when pushed to main

name: CD
on:
  workflow_dispatch: 
  push:
    branches: main
    paths:
      - 'src/**' # Deploy web every change in src folder
      - '.github/workflows/cd.yml'
    
permissions:
  contents: read

jobs:
  build-itchio:
    permissions:
      contents: write       # for actions/upload-release-asset to upload release asset
    runs-on: ubuntu-latest
    
    env:
      BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }} # Needs to be added through github
      PROJECT_NAME: space-researcher
      WEB_BUILD_DIR: zig-out/htmlout
      LINUX_BUILD_DIR: zig-out/linux
      WINDOWS_BUILD_DIR: zig-out/windows

    steps:
      - name: Checkout Project
        uses: actions/checkout@v4.2.1

      - name: Cache build/emsdk-cache
        uses: actions/cache@v3
        with:
          path: ${{github.workspace}}/emsdk
          key: emsdk
          restore-keys: emsdk

      - name: Cache build/zig-cache
        uses: actions/cache@v3
        with:
          path: ${{github.workspace}}/.zig-cache
          key: .zig-cache
          restore-keys: .zig-cache

      - name: Setup Environment
        run: | 
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends python3 libglfw3 libglfw3-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev libwayland-dev libxkbcommon-dev cmake wget
          wget https://ziglang.org/download/0.14.1/zig-x86_64-linux-0.14.1.tar.xz
          mkdir -p zig-folder
          tar xf zig-x86_64-linux-0.14.1.tar.xz -C ./zig-folder  --strip-components=1
          rm ./zig-x86_64-linux-0.14.1.tar.xz
          chmod +x ./zig-folder/zig
        shell: bash

      - name: Unit Test
        run: ./zig-folder/zig build test --summary new -Doptimize=ReleaseSmall
  
      - name: Setup emsdk
        run: |
          if cd emsdk; then git pull; else git clone https://github.com/emscripten-core/emsdk.git emsdk; cd emsdk; fi
          ./emsdk install latest
          ./emsdk activate latest
          source ./emsdk_env.sh

      - name: Build Web Project
        id: buildWeb
        continue-on-error: true
        run: |
          ./zig-folder/zig build -Dtarget=wasm32-emscripten -Doptimize=ReleaseSmall --sysroot emsdk/upstream/emscripten
          cp README.md ${{ env.WEB_BUILD_DIR }}
          cp LICENSE ${{ env.WEB_BUILD_DIR }}
          
      - name: Build Linux Project
        id: buildLinux
        continue-on-error: true
        run: |
          ./zig-folder/zig build -Doptimize=ReleaseSmall --prefix zig-out/linux --prefix-exe-dir ""
          cp README.md ${{ env.LINUX_BUILD_DIR }}
          cp LICENSE ${{ env.LINUX_BUILD_DIR }}
          
      - name: Build Windows Project
        id: buildWindows
        continue-on-error: true
        run: |
          ./zig-folder/zig build -Dtarget=x86_64-windows -Doptimize=ReleaseSmall --prefix zig-out/windows --prefix-exe-dir ""
          cp README.md ${{ env.WINDOWS_BUILD_DIR }}
          cp LICENSE ${{ env.WINDOWS_BUILD_DIR }}

      - name: Upload Web Artifacts
        if: steps.buildWeb.outcome != 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}-web
          path: ./${{ env.WEB_BUILD_DIR }}/*

      - name: Upload Linux Artifacts
        if: steps.buildLinux.outcome != 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}-linux
          path: ./${{ env.LINUX_BUILD_DIR }}/*

      - name: Upload Windows Artifacts
        if: steps.buildWindows.outcome != 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}-windows
          path: ./${{ env.WINDOWS_BUILD_DIR }}/*

      - name: Download + Authorize Butler
        run: |
            curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
            unzip butler.zip
            chmod +x butler
            ./butler -V

      - name: Login To Butler
        run: ./butler login

      - name: Push Web to Itch
        if: steps.buildWeb.outcome != 'failure'
        run: ./butler push ${{ env.WEB_BUILD_DIR }} maiconspas/space-researcher:web

      - name: Push Linux to Itch
        if: steps.buildLinux.outcome != 'failure'
        run: ./butler push ${{ env.LINUX_BUILD_DIR }} maiconspas/space-researcher:linux

      - name: Push Windows to Itch
        if: steps.buildWindows.outcome != 'failure'
        run: ./butler push ${{ env.WINDOWS_BUILD_DIR }} maiconspas/space-researcher:windows